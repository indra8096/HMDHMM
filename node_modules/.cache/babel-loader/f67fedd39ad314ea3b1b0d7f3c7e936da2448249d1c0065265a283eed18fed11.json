{"ast":null,"code":"var _jsxFileName = \"/home/indra/01.programmation/02.modsys/04.UHDHMM/UMDHMM/src/pages/Documentation.tsx\";\nimport React from 'react';\nimport { Navbar } from '../components/shared/Navbar';\nimport { Card } from '../components/shared/Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst scripts = [{\n  name: \"testfor\",\n  description: \"Implémente l'algorithme Forward pour calculer la probabilité qu'une séquence d'observations soit générée par un modèle HMM donné. Cet algorithme utilise la programmation dynamique pour calculer efficacement P(O|λ), où O est la séquence d'observations et λ est le modèle HMM.\",\n  usage: \"./testfor [options] fichier_modele fichier_sequence\",\n  options: [{\n    flag: \"-v\",\n    description: \"Mode verbeux : affiche les détails des calculs intermédiaires\"\n  }, {\n    flag: \"-d\",\n    description: \"Mode debug : affiche plus d'informations sur les calculs\"\n  }],\n  example: \"./testfor -v model.hmm sequence.seq\",\n  outputFormat: `Sortie standard :\nP(O|λ) = 0.0123\nLog[P(O|λ)] = -4.3982\n\nMode verbeux (-v) :\nt=1: α₁(1)=0.3, α₁(2)=0.4, ...\nt=2: α₂(1)=0.15, α₂(2)=0.25, ...\n...`,\n  inputs: [\"fichier_modele (.hmm) : Fichier contenant les paramètres du modèle HMM\", \"fichier_sequence (.seq) : Fichier contenant la séquence d'observations\"],\n  outputs: [\"Probabilité P(O|λ) que la séquence soit générée par le modèle\", \"Log-probabilité pour une meilleure précision numérique\", \"Détails des calculs en mode verbeux\"]\n}, {\n  name: \"testvit\",\n  description: \"Implémente l'algorithme de Viterbi pour trouver la séquence d'états la plus probable qui pourrait avoir généré une séquence d'observations donnée. L'algorithme utilise la programmation dynamique pour trouver le chemin optimal à travers les états cachés.\",\n  usage: \"./testvit [options] fichier_modele fichier_sequence\",\n  options: [{\n    flag: \"-v\",\n    description: \"Mode verbeux : montre le tracé complet du chemin\"\n  }, {\n    flag: \"-p\",\n    description: \"Affiche les probabilités pour chaque état à chaque instant\"\n  }],\n  example: \"./testvit -v model.hmm sequence.seq\",\n  outputFormat: `Sortie standard :\nSéquence d'états : 1 2 2 3 1\nProbabilité : 0.0234\nLog-probabilité : -3.7549\n\nMode verbeux (-v) :\nt=1: État 1 (0.3)\nt=2: État 2 (0.15)\n...`,\n  inputs: [\"fichier_modele (.hmm) : Fichier contenant les paramètres du modèle HMM\", \"fichier_sequence (.seq) : Fichier contenant la séquence d'observations\"],\n  outputs: [\"Séquence d'états la plus probable\", \"Probabilité du chemin optimal\", \"Log-probabilité du chemin\", \"Tracé détaillé du chemin en mode verbeux\"]\n}, {\n  name: \"testbw\",\n  description: \"Implémente l'algorithme de Baum-Welch pour ré-estimer les paramètres d'un modèle HMM. Utilise l'algorithme EM (Expectation-Maximization) pour optimiser les paramètres du modèle en maximisant la probabilité des observations. Particulièrement utile pour l'apprentissage non supervisé des paramètres du modèle.\",\n  usage: \"./testbw [options] fichier_modele fichier_sequence\",\n  options: [{\n    flag: \"-i N\",\n    description: \"Nombre maximum d'itérations (défaut: 100)\"\n  }, {\n    flag: \"-t ε\",\n    description: \"Seuil de convergence (défaut: 0.001)\"\n  }, {\n    flag: \"-v\",\n    description: \"Mode verbeux : affiche les paramètres à chaque itération\"\n  }],\n  example: \"./testbw -i 200 -t 0.0001 -v model.hmm sequence.seq\",\n  outputFormat: `Sortie standard :\nItération 1: Log-probabilité = -234.567\nItération 2: Log-probabilité = -230.123\n...\nConvergence atteinte après N itérations\nModèle final sauvegardé dans model_trained.hmm\n\nMode verbeux (-v) :\nItération 1:\nA = [0.7 0.3; 0.4 0.6]\nB = [0.2 0.8; 0.3 0.7]\n...`,\n  inputs: [\"fichier_modele (.hmm) : Fichier contenant les paramètres initiaux du modèle\", \"fichier_sequence (.seq) : Fichier contenant la séquence d'apprentissage\"],\n  outputs: [\"Modèle HMM optimisé (sauvegardé dans un nouveau fichier)\", \"Log de convergence pour chaque itération\", \"Paramètres intermédiaires en mode verbeux\"]\n}, {\n  name: \"esthmm\",\n  description: \"Estime les paramètres initiaux d'un modèle HMM à partir d'une séquence d'observations et de sa séquence d'états correspondante. Calcule les probabilités de transition entre états et les probabilités d'émission des observations en utilisant les fréquences observées.\",\n  usage: \"./esthmm [options] fichier_etats fichier_sequence\",\n  options: [{\n    flag: \"-v\",\n    description: \"Mode verbeux : affiche les détails des calculs\"\n  }],\n  example: \"./esthmm -v states.sta sequence.seq\",\n  outputFormat: `Sortie standard :\nNombre d'états : N\nTaille de l'alphabet : M\nMatrice de transition A :\n[0.7 0.3; 0.4 0.6]\nMatrice d'émission B :\n[0.2 0.8; 0.3 0.7]\nModèle sauvegardé dans estimated.hmm`,\n  inputs: [\"fichier_etats (.sta) : Fichier contenant la séquence d'états\", \"fichier_sequence (.seq) : Fichier contenant la séquence d'observations\"],\n  outputs: [\"Paramètres estimés du modèle HMM\", \"Matrices de transition et d'émission\", \"Modèle sauvegardé dans un fichier .hmm\"]\n}, {\n  name: \"genseq\",\n  description: \"Génère une séquence d'observations aléatoire à partir d'un modèle HMM donné. Utilise les probabilités de transition et d'émission du modèle pour simuler une séquence d'observations. Utile pour tester et valider les modèles HMM.\",\n  usage: \"./genseq [options] fichier_modele longueur\",\n  options: [{\n    flag: \"-s N\",\n    description: \"Définit la graine aléatoire pour la reproductibilité\"\n  }, {\n    flag: \"-v\",\n    description: \"Mode verbeux : affiche la séquence d'états générée\"\n  }],\n  example: \"./genseq -s 12345 -v model.hmm 100\",\n  outputFormat: `Sortie standard :\nSéquence générée : 1 2 1 3 2 1 ...\nLongueur : 100\nSéquence sauvegardée dans generated.seq\n\nMode verbeux (-v) :\nÉtats : 1 1 2 1 3 2 ...\nObservations : 1 2 1 3 2 1 ...`,\n  inputs: [\"fichier_modele (.hmm) : Fichier contenant les paramètres du modèle HMM\", \"longueur : Nombre d'observations à générer\"],\n  outputs: [\"Séquence d'observations générée\", \"Fichier .seq contenant la séquence\", \"Séquence d'états en mode verbeux\"]\n}];\nexport const Documentation = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4 mb-4\",\n        children: \"Documentation UMDHMM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead mb-5\",\n        children: \"Guide d\\xE9taill\\xE9 des outils disponibles dans UMDHMM et leur utilisation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), scripts.map((script, index) => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"h3 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-terminal me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), script.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h5 mb-2\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: script.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h5 mb-2\",\n          children: \"Utilisation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-light p-3 rounded mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: script.usage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"h5 mb-2\",\n              children: \"Entr\\xE9es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-unstyled\",\n              children: script.inputs.map((input, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-arrow-right me-2 text-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 45\n                }, this), input]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"h5 mb-2\",\n              children: \"Sorties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-unstyled\",\n              children: script.outputs.map((output, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-arrow-left me-2 text-success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 45\n                }, this), output]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h5 mb-2\",\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-sm mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: script.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: option.flag\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: option.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 41\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h5 mb-2\",\n          children: \"Exemple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-light p-3 rounded mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: script.example\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h5 mb-2\",\n          children: \"Format de sortie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-light p-3 rounded mb-0\",\n          children: script.outputFormat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Documentation;\nvar _c;\n$RefreshReg$(_c, \"Documentation\");","map":{"version":3,"names":["React","Navbar","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","scripts","name","description","usage","options","flag","example","outputFormat","inputs","outputs","Documentation","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","script","index","input","i","output","option","_c","$RefreshReg$"],"sources":["/home/indra/01.programmation/02.modsys/04.UHDHMM/UMDHMM/src/pages/Documentation.tsx"],"sourcesContent":["import React from 'react';\nimport { Navbar } from '../components/shared/Navbar';\nimport { Card } from '../components/shared/Card';\n\ninterface Script {\n    name: string;\n    description: string;\n    usage: string;\n    options: Array<{\n        flag: string;\n        description: string;\n    }>;\n    example: string;\n    outputFormat: string;\n    inputs: string[];\n    outputs: string[];\n}\n\nconst scripts: Script[] = [\n    {\n        name: \"testfor\",\n        description: \"Implémente l'algorithme Forward pour calculer la probabilité qu'une séquence d'observations soit générée par un modèle HMM donné. Cet algorithme utilise la programmation dynamique pour calculer efficacement P(O|λ), où O est la séquence d'observations et λ est le modèle HMM.\",\n        usage: \"./testfor [options] fichier_modele fichier_sequence\",\n        options: [\n            {\n                flag: \"-v\",\n                description: \"Mode verbeux : affiche les détails des calculs intermédiaires\"\n            },\n            {\n                flag: \"-d\",\n                description: \"Mode debug : affiche plus d'informations sur les calculs\"\n            }\n        ],\n        example: \"./testfor -v model.hmm sequence.seq\",\n        outputFormat: `Sortie standard :\nP(O|λ) = 0.0123\nLog[P(O|λ)] = -4.3982\n\nMode verbeux (-v) :\nt=1: α₁(1)=0.3, α₁(2)=0.4, ...\nt=2: α₂(1)=0.15, α₂(2)=0.25, ...\n...`,\n        inputs: [\n            \"fichier_modele (.hmm) : Fichier contenant les paramètres du modèle HMM\",\n            \"fichier_sequence (.seq) : Fichier contenant la séquence d'observations\"\n        ],\n        outputs: [\n            \"Probabilité P(O|λ) que la séquence soit générée par le modèle\",\n            \"Log-probabilité pour une meilleure précision numérique\",\n            \"Détails des calculs en mode verbeux\"\n        ]\n    },\n    {\n        name: \"testvit\",\n        description: \"Implémente l'algorithme de Viterbi pour trouver la séquence d'états la plus probable qui pourrait avoir généré une séquence d'observations donnée. L'algorithme utilise la programmation dynamique pour trouver le chemin optimal à travers les états cachés.\",\n        usage: \"./testvit [options] fichier_modele fichier_sequence\",\n        options: [\n            {\n                flag: \"-v\",\n                description: \"Mode verbeux : montre le tracé complet du chemin\"\n            },\n            {\n                flag: \"-p\",\n                description: \"Affiche les probabilités pour chaque état à chaque instant\"\n            }\n        ],\n        example: \"./testvit -v model.hmm sequence.seq\",\n        outputFormat: `Sortie standard :\nSéquence d'états : 1 2 2 3 1\nProbabilité : 0.0234\nLog-probabilité : -3.7549\n\nMode verbeux (-v) :\nt=1: État 1 (0.3)\nt=2: État 2 (0.15)\n...`,\n        inputs: [\n            \"fichier_modele (.hmm) : Fichier contenant les paramètres du modèle HMM\",\n            \"fichier_sequence (.seq) : Fichier contenant la séquence d'observations\"\n        ],\n        outputs: [\n            \"Séquence d'états la plus probable\",\n            \"Probabilité du chemin optimal\",\n            \"Log-probabilité du chemin\",\n            \"Tracé détaillé du chemin en mode verbeux\"\n        ]\n    },\n    {\n        name: \"testbw\",\n        description: \"Implémente l'algorithme de Baum-Welch pour ré-estimer les paramètres d'un modèle HMM. Utilise l'algorithme EM (Expectation-Maximization) pour optimiser les paramètres du modèle en maximisant la probabilité des observations. Particulièrement utile pour l'apprentissage non supervisé des paramètres du modèle.\",\n        usage: \"./testbw [options] fichier_modele fichier_sequence\",\n        options: [\n            {\n                flag: \"-i N\",\n                description: \"Nombre maximum d'itérations (défaut: 100)\"\n            },\n            {\n                flag: \"-t ε\",\n                description: \"Seuil de convergence (défaut: 0.001)\"\n            },\n            {\n                flag: \"-v\",\n                description: \"Mode verbeux : affiche les paramètres à chaque itération\"\n            }\n        ],\n        example: \"./testbw -i 200 -t 0.0001 -v model.hmm sequence.seq\",\n        outputFormat: `Sortie standard :\nItération 1: Log-probabilité = -234.567\nItération 2: Log-probabilité = -230.123\n...\nConvergence atteinte après N itérations\nModèle final sauvegardé dans model_trained.hmm\n\nMode verbeux (-v) :\nItération 1:\nA = [0.7 0.3; 0.4 0.6]\nB = [0.2 0.8; 0.3 0.7]\n...`,\n        inputs: [\n            \"fichier_modele (.hmm) : Fichier contenant les paramètres initiaux du modèle\",\n            \"fichier_sequence (.seq) : Fichier contenant la séquence d'apprentissage\"\n        ],\n        outputs: [\n            \"Modèle HMM optimisé (sauvegardé dans un nouveau fichier)\",\n            \"Log de convergence pour chaque itération\",\n            \"Paramètres intermédiaires en mode verbeux\"\n        ]\n    },\n    {\n        name: \"esthmm\",\n        description: \"Estime les paramètres initiaux d'un modèle HMM à partir d'une séquence d'observations et de sa séquence d'états correspondante. Calcule les probabilités de transition entre états et les probabilités d'émission des observations en utilisant les fréquences observées.\",\n        usage: \"./esthmm [options] fichier_etats fichier_sequence\",\n        options: [\n            {\n                flag: \"-v\",\n                description: \"Mode verbeux : affiche les détails des calculs\"\n            }\n        ],\n        example: \"./esthmm -v states.sta sequence.seq\",\n        outputFormat: `Sortie standard :\nNombre d'états : N\nTaille de l'alphabet : M\nMatrice de transition A :\n[0.7 0.3; 0.4 0.6]\nMatrice d'émission B :\n[0.2 0.8; 0.3 0.7]\nModèle sauvegardé dans estimated.hmm`,\n        inputs: [\n            \"fichier_etats (.sta) : Fichier contenant la séquence d'états\",\n            \"fichier_sequence (.seq) : Fichier contenant la séquence d'observations\"\n        ],\n        outputs: [\n            \"Paramètres estimés du modèle HMM\",\n            \"Matrices de transition et d'émission\",\n            \"Modèle sauvegardé dans un fichier .hmm\"\n        ]\n    },\n    {\n        name: \"genseq\",\n        description: \"Génère une séquence d'observations aléatoire à partir d'un modèle HMM donné. Utilise les probabilités de transition et d'émission du modèle pour simuler une séquence d'observations. Utile pour tester et valider les modèles HMM.\",\n        usage: \"./genseq [options] fichier_modele longueur\",\n        options: [\n            {\n                flag: \"-s N\",\n                description: \"Définit la graine aléatoire pour la reproductibilité\"\n            },\n            {\n                flag: \"-v\",\n                description: \"Mode verbeux : affiche la séquence d'états générée\"\n            }\n        ],\n        example: \"./genseq -s 12345 -v model.hmm 100\",\n        outputFormat: `Sortie standard :\nSéquence générée : 1 2 1 3 2 1 ...\nLongueur : 100\nSéquence sauvegardée dans generated.seq\n\nMode verbeux (-v) :\nÉtats : 1 1 2 1 3 2 ...\nObservations : 1 2 1 3 2 1 ...`,\n        inputs: [\n            \"fichier_modele (.hmm) : Fichier contenant les paramètres du modèle HMM\",\n            \"longueur : Nombre d'observations à générer\"\n        ],\n        outputs: [\n            \"Séquence d'observations générée\",\n            \"Fichier .seq contenant la séquence\",\n            \"Séquence d'états en mode verbeux\"\n        ]\n    }\n];\n\nexport const Documentation: React.FC = () => {\n    return (\n        <>\n            <Navbar />\n            <main className=\"container py-5\">\n                <h1 className=\"display-4 mb-4\">Documentation UMDHMM</h1>\n                <p className=\"lead mb-5\">\n                    Guide détaillé des outils disponibles dans UMDHMM et leur utilisation.\n                </p>\n\n                {scripts.map((script, index) => (\n                    <Card key={index} className=\"mb-4\">\n                        <h2 className=\"h3 mb-3\">\n                            <i className=\"fas fa-terminal me-2\"></i>\n                            {script.name}\n                        </h2>\n                        \n                        <h3 className=\"h5 mb-2\">Description</h3>\n                        <p className=\"mb-4\">{script.description}</p>\n\n                        <h3 className=\"h5 mb-2\">Utilisation</h3>\n                        <div className=\"bg-light p-3 rounded mb-3\">\n                            <code>{script.usage}</code>\n                        </div>\n\n                        <div className=\"row mb-4\">\n                            <div className=\"col-md-6\">\n                                <h3 className=\"h5 mb-2\">Entrées</h3>\n                                <ul className=\"list-unstyled\">\n                                    {script.inputs.map((input, i) => (\n                                        <li key={i} className=\"mb-1\">\n                                            <i className=\"fas fa-arrow-right me-2 text-primary\"></i>\n                                            {input}\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <h3 className=\"h5 mb-2\">Sorties</h3>\n                                <ul className=\"list-unstyled\">\n                                    {script.outputs.map((output, i) => (\n                                        <li key={i} className=\"mb-1\">\n                                            <i className=\"fas fa-arrow-left me-2 text-success\"></i>\n                                            {output}\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n\n                        <h3 className=\"h5 mb-2\">Options</h3>\n                        <table className=\"table table-sm mb-4\">\n                            <thead>\n                                <tr>\n                                    <th>Option</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {script.options.map((option, i) => (\n                                    <tr key={i}>\n                                        <td><code>{option.flag}</code></td>\n                                        <td>{option.description}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n\n                        <h3 className=\"h5 mb-2\">Exemple</h3>\n                        <div className=\"bg-light p-3 rounded mb-3\">\n                            <code>{script.example}</code>\n                        </div>\n\n                        <h3 className=\"h5 mb-2\">Format de sortie</h3>\n                        <pre className=\"bg-light p-3 rounded mb-0\">\n                            {script.outputFormat}\n                        </pre>\n                    </Card>\n                ))}\n            </main>\n        </>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}