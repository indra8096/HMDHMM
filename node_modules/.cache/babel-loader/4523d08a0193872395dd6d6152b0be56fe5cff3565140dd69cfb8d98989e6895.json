{"ast":null,"code":"var _jsxFileName = \"/home/indra/01.programmation/02.modsys/04.UHDHMM/UMDHMM/src/pages/Documentation.tsx\";\nimport React from 'react';\nimport { Navbar } from '../components/shared/Navbar';\nimport { Card } from '../components/shared/Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst scripts = [{\n  name: \"testfor\",\n  description: \"Implémente l'algorithme Forward pour calculer la probabilité qu'une séquence d'observations soit générée par un modèle HMM donné. Cet algorithme utilise la programmation dynamique pour calculer efficacement P(O|λ).\",\n  usage: \"./testfor [options] fichier_modele fichier_sequence\",\n  options: [{\n    flag: \"-v\",\n    description: \"Mode verbeux : affiche les détails des calculs\"\n  }, {\n    flag: \"-d\",\n    description: \"Active le mode debug avec plus d'informations\"\n  }],\n  example: \"./testfor -v model.hmm sequence.seq\",\n  outputFormat: `Sortie standard :\nP(O|λ) = 0.0123\nLog[P(O|λ)] = -4.3982`\n}, {\n  name: \"testvit\",\n  description: \"Implémente l'algorithme de Viterbi pour trouver la séquence d'états la plus probable qui pourrait avoir généré une séquence d'observations donnée. Utilise le principe de programmation dynamique pour trouver le chemin optimal.\",\n  usage: \"./testvit [options] fichier_modele fichier_sequence\",\n  options: [{\n    flag: \"-v\",\n    description: \"Mode verbeux : montre le tracé du chemin\"\n  }, {\n    flag: \"-p\",\n    description: \"Affiche les probabilités pour chaque état\"\n  }],\n  example: \"./testvit -v model.hmm sequence.seq\",\n  outputFormat: `Sortie standard :\nSéquence d'états : 1 2 2 3 1\nProbabilité : 0.0234\nLog-probabilité : -3.7549`\n}, {\n  name: \"testbw\",\n  description: \"Implémente l'algorithme de Baum-Welch pour ré-estimer les paramètres d'un modèle HMM. Utilise l'algorithme EM (Expectation-Maximization) pour optimiser les paramètres du modèle en maximisant la probabilité des observations.\",\n  usage: \"./testbw [options] fichier_modele fichier_sequence\",\n  options: [{\n    flag: \"-i N\",\n    description: \"Nombre maximum d'itérations (défaut: 100)\"\n  }, {\n    flag: \"-t ε\",\n    description: \"Seuil de convergence (défaut: 0.001)\"\n  }, {\n    flag: \"-v\",\n    description: \"Mode verbeux : affiche les paramètres à chaque itération\"\n  }],\n  example: \"./testbw -i 200 -t 0.0001 -v model.hmm sequence.seq\",\n  outputFormat: `Sortie standard :\nItération 1: Log-probabilité = -234.567\nItération 2: Log-probabilité = -230.123\n...\nConvergence atteinte après N itérations\nModèle final sauvegardé dans model_trained.hmm`\n}];\nexport const Documentation = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4 mb-4\",\n        children: \"Documentation UMDHMM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead mb-5\",\n        children: \"Guide d\\xE9taill\\xE9 des scripts disponibles dans UMDHMM et leur utilisation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), scripts.map((script, index) => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"h3 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-terminal me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), script.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h5 mb-2\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: script.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h5 mb-2\",\n          children: \"Utilisation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-light p-3 rounded mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: script.usage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h5 mb-2\",\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-sm mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: script.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: option.flag\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: option.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 41\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h5 mb-2\",\n          children: \"Exemple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-light p-3 rounded mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: script.example\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"h5 mb-2\",\n          children: \"Format de sortie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-light p-3 rounded mb-0\",\n          children: script.outputFormat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Documentation;\nvar _c;\n$RefreshReg$(_c, \"Documentation\");","map":{"version":3,"names":["React","Navbar","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","scripts","name","description","usage","options","flag","example","outputFormat","Documentation","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","script","index","option","i","_c","$RefreshReg$"],"sources":["/home/indra/01.programmation/02.modsys/04.UHDHMM/UMDHMM/src/pages/Documentation.tsx"],"sourcesContent":["import React from 'react';\nimport { Navbar } from '../components/shared/Navbar';\nimport { Card } from '../components/shared/Card';\n\ninterface Script {\n    name: string;\n    description: string;\n    usage: string;\n    options: Array<{\n        flag: string;\n        description: string;\n    }>;\n    example: string;\n    outputFormat: string;\n}\n\nconst scripts: Script[] = [\n    {\n        name: \"testfor\",\n        description: \"Implémente l'algorithme Forward pour calculer la probabilité qu'une séquence d'observations soit générée par un modèle HMM donné. Cet algorithme utilise la programmation dynamique pour calculer efficacement P(O|λ).\",\n        usage: \"./testfor [options] fichier_modele fichier_sequence\",\n        options: [\n            {\n                flag: \"-v\",\n                description: \"Mode verbeux : affiche les détails des calculs\"\n            },\n            {\n                flag: \"-d\",\n                description: \"Active le mode debug avec plus d'informations\"\n            }\n        ],\n        example: \"./testfor -v model.hmm sequence.seq\",\n        outputFormat: `Sortie standard :\nP(O|λ) = 0.0123\nLog[P(O|λ)] = -4.3982`\n    },\n    {\n        name: \"testvit\",\n        description: \"Implémente l'algorithme de Viterbi pour trouver la séquence d'états la plus probable qui pourrait avoir généré une séquence d'observations donnée. Utilise le principe de programmation dynamique pour trouver le chemin optimal.\",\n        usage: \"./testvit [options] fichier_modele fichier_sequence\",\n        options: [\n            {\n                flag: \"-v\",\n                description: \"Mode verbeux : montre le tracé du chemin\"\n            },\n            {\n                flag: \"-p\",\n                description: \"Affiche les probabilités pour chaque état\"\n            }\n        ],\n        example: \"./testvit -v model.hmm sequence.seq\",\n        outputFormat: `Sortie standard :\nSéquence d'états : 1 2 2 3 1\nProbabilité : 0.0234\nLog-probabilité : -3.7549`\n    },\n    {\n        name: \"testbw\",\n        description: \"Implémente l'algorithme de Baum-Welch pour ré-estimer les paramètres d'un modèle HMM. Utilise l'algorithme EM (Expectation-Maximization) pour optimiser les paramètres du modèle en maximisant la probabilité des observations.\",\n        usage: \"./testbw [options] fichier_modele fichier_sequence\",\n        options: [\n            {\n                flag: \"-i N\",\n                description: \"Nombre maximum d'itérations (défaut: 100)\"\n            },\n            {\n                flag: \"-t ε\",\n                description: \"Seuil de convergence (défaut: 0.001)\"\n            },\n            {\n                flag: \"-v\",\n                description: \"Mode verbeux : affiche les paramètres à chaque itération\"\n            }\n        ],\n        example: \"./testbw -i 200 -t 0.0001 -v model.hmm sequence.seq\",\n        outputFormat: `Sortie standard :\nItération 1: Log-probabilité = -234.567\nItération 2: Log-probabilité = -230.123\n...\nConvergence atteinte après N itérations\nModèle final sauvegardé dans model_trained.hmm`\n    }\n];\n\nexport const Documentation: React.FC = () => {\n    return (\n        <>\n            <Navbar />\n            <main className=\"container py-5\">\n                <h1 className=\"display-4 mb-4\">Documentation UMDHMM</h1>\n                <p className=\"lead mb-5\">\n                    Guide détaillé des scripts disponibles dans UMDHMM et leur utilisation.\n                </p>\n\n                {scripts.map((script, index) => (\n                    <Card key={index} className=\"mb-4\">\n                        <h2 className=\"h3 mb-3\">\n                            <i className=\"fas fa-terminal me-2\"></i>\n                            {script.name}\n                        </h2>\n                        \n                        <h3 className=\"h5 mb-2\">Description</h3>\n                        <p className=\"mb-4\">{script.description}</p>\n\n                        <h3 className=\"h5 mb-2\">Utilisation</h3>\n                        <div className=\"bg-light p-3 rounded mb-3\">\n                            <code>{script.usage}</code>\n                        </div>\n\n                        <h3 className=\"h5 mb-2\">Options</h3>\n                        <table className=\"table table-sm mb-4\">\n                            <thead>\n                                <tr>\n                                    <th>Option</th>\n                                    <th>Description</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {script.options.map((option, i) => (\n                                    <tr key={i}>\n                                        <td><code>{option.flag}</code></td>\n                                        <td>{option.description}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n\n                        <h3 className=\"h5 mb-2\">Exemple</h3>\n                        <div className=\"bg-light p-3 rounded mb-3\">\n                            <code>{script.example}</code>\n                        </div>\n\n                        <h3 className=\"h5 mb-2\">Format de sortie</h3>\n                        <pre className=\"bg-light p-3 rounded mb-0\">\n                            {script.outputFormat}\n                        </pre>\n                    </Card>\n                ))}\n            </main>\n        </>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}